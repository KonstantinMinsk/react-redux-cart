{"ast":null,"code":"import _objectSpread from\"/Users/quonnbernard/REDUX-CART/react-redux-cart/react-cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ORDER_PRODUCTS_BY_PRICE,FILTER_PRODUCTS_BY_SIZE,FETCH_PRODUCTS}from\"../types\";var data=require(\"../../data.json\");var productsReducer=function productsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FILTER_PRODUCTS_BY_SIZE:return _objectSpread(_objectSpread({},state),{},{size:action.payload.size,filteredItems:action.payload.items});case ORDER_PRODUCTS_BY_PRICE:console.log(\"sorting by price\");return _objectSpread(_objectSpread({},state),{},{sort:action.payload.sort,filteredItems:action.payload.items});case FETCH_PRODUCTS:return{items:action.payload,filteredItems:action.payload};default:return state;}};export default productsReducer;","map":{"version":3,"sources":["/Users/quonnbernard/REDUX-CART/react-redux-cart/react-cart/src/redux/reducers/productReducers.js"],"names":["ORDER_PRODUCTS_BY_PRICE","FILTER_PRODUCTS_BY_SIZE","FETCH_PRODUCTS","data","require","productsReducer","state","action","type","size","payload","filteredItems","items","console","log","sort"],"mappings":"gLAAA,OAASA,uBAAT,CAAkCC,uBAAlC,CAA2DC,cAA3D,KAAiF,UAAjF,CAEA,GAAMC,CAAAA,IAAI,CAAGC,OAAO,CAAC,iBAAD,CAApB,CACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAwB,IAAvBC,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CAC9C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKP,CAAAA,uBAAL,CACE,sCACKK,KADL,MAEEG,IAAI,CAAEF,MAAM,CAACG,OAAP,CAAeD,IAFvB,CAGEE,aAAa,CAAEJ,MAAM,CAACG,OAAP,CAAeE,KAHhC,GAMF,IAAKZ,CAAAA,uBAAL,CACEa,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACA,sCACKR,KADL,MAEES,IAAI,CAAER,MAAM,CAACG,OAAP,CAAeK,IAFvB,CAGEJ,aAAa,CAAEJ,MAAM,CAACG,OAAP,CAAeE,KAHhC,GAKF,IAAKV,CAAAA,cAAL,CACE,MAAO,CAAEU,KAAK,CAAEL,MAAM,CAACG,OAAhB,CAAyBC,aAAa,CAAEJ,MAAM,CAACG,OAA/C,CAAP,CACF,QACE,MAAOJ,CAAAA,KAAP,CAlBJ,CAoBD,CArBD,CAsBA,cAAeD,CAAAA,eAAf","sourcesContent":["import { ORDER_PRODUCTS_BY_PRICE, FILTER_PRODUCTS_BY_SIZE, FETCH_PRODUCTS } from \"../types\";\n\nconst data = require(\"../../data.json\");\nconst productsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FILTER_PRODUCTS_BY_SIZE:\n      return {\n        ...state,\n        size: action.payload.size,\n        filteredItems: action.payload.items,\n      };\n\n    case ORDER_PRODUCTS_BY_PRICE:\n      console.log(\"sorting by price\");\n      return {\n        ...state,\n        sort: action.payload.sort,\n        filteredItems: action.payload.items,\n      };\n    case FETCH_PRODUCTS:\n      return { items: action.payload, filteredItems: action.payload };\n    default:\n      return state;\n  }\n};\nexport default productsReducer;\n"]},"metadata":{},"sourceType":"module"}