{"ast":null,"code":"import React from'react';import{connect,useDispatch}from'react-redux';import{filterProducts,sortProducts}from\"../redux/actions/productActions\";var Filter=function Filter(_ref){var size=_ref.size,sort=_ref.sort,products=_ref.products,filteredProducts=_ref.filteredProducts;var dispatch=useDispatch();var getSorterVals=function getSorterVals(a,b){dispatch(sortProducts(a,b));};var getFilterVals=function getFilterVals(a,b){dispatch(filterProducts(a,b));};return/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 row mb-5 p-0\"},/*#__PURE__*/React.createElement(\"div\",{className:\"filter-sort col-6\"},\"Order by Price\",/*#__PURE__*/React.createElement(\"select\",{className:\"custom-select\",value:sort,onChange:function onChange(e){return getSorterVals(filteredProducts,e.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"latest\"},\"Latest\"),/*#__PURE__*/React.createElement(\"option\",{value:\"lowest\"},\"Lowest\"),/*#__PURE__*/React.createElement(\"option\",{value:\"highest\"},\"Highest\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"filter-size col-6\"},\"Filter By Size\",\" \",/*#__PURE__*/React.createElement(\"select\",{className:\"custom-select\",value:size,onChange:function onChange(e){return getFilterVals(products,e.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"ALL\"),/*#__PURE__*/React.createElement(\"option\",{value:\"XS\"},\"XS\"),/*#__PURE__*/React.createElement(\"option\",{value:\"S\"},\"S\"),/*#__PURE__*/React.createElement(\"option\",{value:\"M\"},\"M\"),/*#__PURE__*/React.createElement(\"option\",{value:\"L\"},\"L\"),/*#__PURE__*/React.createElement(\"option\",{value:\"XL\"},\"XL\"),/*#__PURE__*/React.createElement(\"option\",{value:\"XXL\"},\"XXL\"))));};export default connect(function(state){return{size:state.products.size,sort:state.products.sort,products:state.products.items,filteredProducts:state.products.filteredItems};},{filterProducts:filterProducts,sortProducts:sortProducts})(Filter);","map":{"version":3,"sources":["/Users/quonnbernard/REDUX-CART/react-redux-cart/react-cart/src/components/Filter.js"],"names":["React","connect","useDispatch","filterProducts","sortProducts","Filter","size","sort","products","filteredProducts","dispatch","getSorterVals","a","b","getFilterVals","e","target","value","state","items","filteredItems"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,CAAkBC,WAAlB,KAAqC,aAArC,CACA,OAASC,cAAT,CAAyBC,YAAzB,KAA6C,iCAA7C,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA+C,IAA5CC,CAAAA,IAA4C,MAA5CA,IAA4C,CAAtCC,IAAsC,MAAtCA,IAAsC,CAAhCC,QAAgC,MAAhCA,QAAgC,CAAtBC,gBAAsB,MAAtBA,gBAAsB,CAC1D,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CAEA,GAAMS,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAGC,CAAH,CAAS,CAC3BH,QAAQ,CAACN,YAAY,CAACQ,CAAD,CAAIC,CAAJ,CAAb,CAAR,CACH,CAFD,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACF,CAAD,CAAGC,CAAH,CAAS,CAC3BH,QAAQ,CAACP,cAAc,CAACS,CAAD,CAAIC,CAAJ,CAAf,CAAR,CACH,CAFD,CAIA,mBACI,2BAAK,SAAS,CAAC,qBAAf,eACI,2BAAK,SAAS,CAAC,mBAAf,gCACkB,8BAAQ,SAAS,CAAC,eAAlB,CAAkC,KAAK,CAAEN,IAAzC,CAA+C,QAAQ,CAAE,kBAACQ,CAAD,QAAKJ,CAAAA,aAAa,CAACF,gBAAD,CAAmBM,CAAC,CAACC,MAAF,CAASC,KAA5B,CAAlB,EAAzD,eACV,8BAAQ,KAAK,CAAC,QAAd,WADU,cAEV,8BAAQ,KAAK,CAAC,QAAd,WAFU,cAGV,8BAAQ,KAAK,CAAC,SAAd,YAHU,CADlB,CADJ,cAQI,2BAAK,SAAS,CAAC,mBAAf,mBACmB,GADnB,cAEI,8BAAQ,SAAS,CAAC,eAAlB,CAAkC,KAAK,CAAEX,IAAzC,CAA+C,QAAQ,CAAE,kBAACS,CAAD,QAAKD,CAAAA,aAAa,CAACN,QAAD,CAAWO,CAAC,CAACC,MAAF,CAASC,KAApB,CAAlB,EAAzD,eACI,8BAAQ,KAAK,CAAC,EAAd,QADJ,cAEI,8BAAQ,KAAK,CAAC,IAAd,OAFJ,cAGI,8BAAQ,KAAK,CAAC,GAAd,MAHJ,cAII,8BAAQ,KAAK,CAAC,GAAd,MAJJ,cAKI,8BAAQ,KAAK,CAAC,GAAd,MALJ,cAMI,8BAAQ,KAAK,CAAC,IAAd,OANJ,cAOI,8BAAQ,KAAK,CAAC,KAAd,QAPJ,CAFJ,CARJ,CADJ,CAuBH,CAlCD,CAoCA,cAAehB,CAAAA,OAAO,CAAC,SAACiB,KAAD,QAAY,CAC/BZ,IAAI,CAAEY,KAAK,CAACV,QAAN,CAAeF,IADU,CAE/BC,IAAI,CAAEW,KAAK,CAACV,QAAN,CAAeD,IAFU,CAG/BC,QAAQ,CAAEU,KAAK,CAACV,QAAN,CAAeW,KAHM,CAI/BV,gBAAgB,CAAES,KAAK,CAACV,QAAN,CAAeY,aAJF,CAAZ,EAAD,CAKnB,CACCjB,cAAc,CAAdA,cADD,CAECC,YAAY,CAAZA,YAFD,CALmB,CAAP,CAQZC,MARY,CAAf","sourcesContent":["import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { filterProducts, sortProducts } from \"../redux/actions/productActions\";\n\nconst Filter = ({ size, sort, products, filteredProducts}) => {\n    const dispatch = useDispatch()\n\n    const getSorterVals = (a,b) => {\n        dispatch(sortProducts(a, b))\n    }\n\n    const getFilterVals = (a,b) => {\n        dispatch(filterProducts(a, b))\n    }\n   \n    return ( \n        <div className=\"col-12 row mb-5 p-0\">\n            <div className='filter-sort col-6'>\n                Order by Price<select className=\"custom-select\" value={sort} onChange={(e)=>getSorterVals(filteredProducts, e.target.value)}>\n                    <option value=\"latest\">Latest</option>\n                    <option value=\"lowest\">Lowest</option>\n                    <option value=\"highest\">Highest</option>\n                </select>\n            </div>\n            <div className='filter-size col-6'>\n                Filter By Size{\" \"}\n                <select className=\"custom-select\" value={size} onChange={(e)=>getFilterVals(products, e.target.value)}>\n                    <option value=\"\">ALL</option>\n                    <option value=\"XS\">XS</option>\n                    <option value=\"S\">S</option>\n                    <option value=\"M\">M</option>\n                    <option value=\"L\">L</option>\n                    <option value=\"XL\">XL</option>\n                    <option value=\"XXL\">XXL</option>\n                </select>\n            </div>\n        </div>\n     );\n}\n \nexport default connect((state) => ({\n    size: state.products.size,\n    sort: state.products.sort,\n    products: state.products.items,\n    filteredProducts: state.products.filteredItems\n}),{\n    filterProducts,\n    sortProducts    \n})(Filter);"]},"metadata":{},"sourceType":"module"}